Nothing is somebody else's problem
Keep it simple
Automate everything
Decouple and isolate
The project must always work
Welcome changing requirements
Never ship shit
The software must be changeable
Keep interfaces small
Leave the code better than you found it
QA must find nothing
Refactoring must be safe and easy
Ask as much as you can
Say "No" if the answer is "No"
Use TDD
Allow major decisions to be deferred
No global state
Don't break interfaces
Prove it
Have sleep
Don't work overtime
Review to improve, not to enforce
Prioritize
Test behavior, not realization
Be conservative in what you send, be liberal in what you accept
A little copying is better than a little dependency
Clear is better than clever
Less is more
Start with research
Listen to others
Weeks of writing save hours of reading
Don't blame
Think how to exploit
Premature optimization is the root of all evil
Make it work, then make it right, then make it fast
CPU time is always cheaper than an engineer's time
Let it crash
Fail fast
Keep changes small
The only thing better than perfect is standardized
Profile before optimizing
